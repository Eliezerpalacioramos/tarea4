@using Microsoft.EntityFrameworkCore;
@page "/entidad/{tipo}/editar"
@page "/entidad/{tipo}/editar/{id:int}"
@rendermode InteractiveServer
@inject NavigationManager NavMan
@inject IJSRuntime JSx
@inject SerieContext Sc


<PageTitle>Editar Entidad</PageTitle>
<h3>Editando @Tipo</h3>

<EditForm Model="instancia" OnValidSubmit="GuardarDatos">
    <DataAnnotationsValidator />
    <ValidationSummary />
   
    <div class="form-group">
        <label for="Nombre">Nombre</label>
        <InputText id="Nombre" class="form-control" @bind-Value="instancia.Nombre" />
    </div>

    <div class="form-group">
        <label for="Pais">Pa√≠s</label>
        <InputText id="Pais" class="form-control" @bind-Value="instancia.Pais" />
    </div>

    <div class="form-group">
        <label for="Idioma">Idioma</label>
        <InputText id="Idioma" class="form-control" @bind-Value="instancia.Idioma" />
    </div>

    <div class="form-group">
        <label for="Resumen">Resumen</label>
        <InputText id="Resumen" class="form-control" @bind-Value="instancia.Resumen" />
    </div>

    <div class="form-group">
        <label for="FotoUrl">Foto URL</label>
        <input id="FotoUrl" type="url" class="form-control" @bind="instancia.FotoUrl" />
    </div>

   

<h4>Personajes</h4>
<table class="table">
    <thead>
        <tr>
            <th>Nombre</th>
            <th>Apodo</th>
            <th>Raza</th>
            <th>Foto</th>
            <th>Edad</th>
            <th>Signo Zodiacal</th>
            <th>Poder Caracteristico</th>
            
             <td colspan="8" class="text-center">
                <button type="button" class="btn btn-primary" @onclick="agregarPersonaje">Agregar </button>
            </td>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in instancia.Personajes)
        {
            <tr>
               

                <td><InputText @bind-Value="item.Nombre" class="form-control" /></td>
                <td><InputText @bind-Value="item.Apodo" class="form-control" /></td>
                <td><InputText @bind-Value="item.Raza" class="form-control" /></td>
                <td><InputText @bind-Value="item.FotoUrl" class="form-control" /></td>
                <td><InputNumber @bind-Value="item.Edad" class="form-control" /></td>
                <td><InputText @bind-Value="item.SignoZodiazal" class="form-control" /></td>
                <td><InputText @bind-Value="item.PoderCaracteristico" class="form-control" /></td>
               
            </tr>
        }
        >
       
    </tbody>
</table>

 <div class="text-center mt-3">
        <button type="submit" class="btn btn-primary">Guardar</button></div>
</EditForm>

@code {
    [Parameter]
    public string Tipo { get; set; } = "";

    [Parameter]
    public int Id { get; set; } = 0;

    SeriePeliculalibro instancia = new SeriePeliculalibro { Personajes = new List<Personaje>() };

    TipoEntidad tipoentidad;

    void agregarPersonaje()
    {
        instancia.Personajes.Add(new Personaje());
        StateHasChanged();
    }

    protected override async Task OnParametersSetAsync()
    {
        switch (Tipo?.ToLower())
        {
            case "libros":
                tipoentidad = TipoEntidad.Libro;
                break;
            case "peliculas":
                tipoentidad = TipoEntidad.Pelicula;
                break;
            case "series":
                tipoentidad = TipoEntidad.Serie;
                break;
            default:
                NavMan.NavigateTo("/");
                break;
        }
        instancia.Tipo = tipoentidad;
    }

    async Task GuardarDatos()
    {
        if (instancia.Id > 0)
        {
            Sc.Update(instancia);
        }
        else
        {
            Sc.Add(instancia);
        }
        await Sc.SaveChangesAsync();
        await JSx.InvokeVoidAsync("alert", "Datos guardados correctamente.");
        NavMan.NavigateTo($"/entidad/{Tipo}");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (Id > 0)
            {
                instancia = await Sc.SeriePeliculalibros.FirstOrDefaultAsync(x => x.Id == Id) ?? new SeriePeliculalibro { Personajes = new List<Personaje>() };
                StateHasChanged();
            }
        }
    }
}
